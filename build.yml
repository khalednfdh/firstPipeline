#name: Build and Push Docker Image
#
#on:
#  push:
#    branches:
#      - main  # Trigger on push to the main branch
#
#jobs:
#  build-and-push:
#    runs-on: ubuntu-latest
#
#    steps:
#      # Checkout the repository
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      # Set up JDK for building the project
#      - name: Set up JDK
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#
#      # Build the Spring Boot application
#      - name: Build Spring Boot JAR
#        run: ./mvnw clean package -DskipTests
#
#      # Log in to Docker Hub
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      # Build Docker image
#      - name: Build Docker Image
#        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-boot-demo:v2 .
#
#      # Push Docker image to Docker Hub
#      - name: Push Docker Image
#        run: docker push ${{ secrets.DOCKER_USERNAME }}/spring-boot-demo:v2
#
#      # Upload Artifact for deployment job (using v3)
#      - name: Upload Artifact for deployment job
#        uses: actions/upload-artifact@v3
#        with:
#          name: springboot-example
#          path: ${{ github.workspace }}/target/*.jar
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build-and-push
#    steps:
#      - name: Download Artifact from build job
#        uses: actions/download-artifact@v3
#        with:
#          name: springboot-example
#      - name: Deploy to Azure App Service
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: springboot-app-test
#          publish-profile: ${{ secrets.PUBLISH_PROFILE }}
#          package: '*.jar'
name: CI/CD for Spring Boot Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install -DskipTests

            # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

            # Build Docker image
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-boot-demo:v2 .

            # Push Docker image to Docker Hub
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/spring-boot-demo:v2

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: my-app-name # Nom de votre application Azure
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }} # Profil de publication Azure configur√© dans les secrets
          images: ${{ secrets.DOCKER_USERNAME }}/spring-boot-demo:v2
